Przed kompilacją należy zmienić ścieżkę w pliku <myprof.conf> na ścieżkę prowadzącą aktualnie do tego katalogu (1-mpi). 

Kompilacja (biblioteka MPICH):
mpicxx mylockmain.cpp -std=c++11 -lpthread -o mylockmain -profile=myprof

Uruchomienie przykładu (5 - liczba procesów MPI): 
mpiexec -np 5 ./mylockmain

Metody klasy MyLock:
MyLock<MyDataClass>* ml = new MyLock<MyDataClass>(obiekt typu MyDataClass);
ml->acquire();
// sekcja krytyczna, zmiany na obiekcie ml->data
ml->release(); // 
delete ml; // zatrzymuje wątek nasłuchujący; wywołuje ~MyLock()

----------------------------------------------------------------------------------------------

Do serializacji wykorzystano Cereal: http://uscilab.github.io/cereal/
Tworzenie obiektów (klas) przygotowanych do serializacji: 
Wystarczy dziedziczyć z ISerializableClass, dodać metodę serialize wraz z linią template... oraz podać wszystkie nazwy zmiennych z MyDataClass do metody archive.

class MyDataClass: public ISerializableClass {
  int x, y, z;

  // This method lets cereal know which data members to serialize
  template<class Archive>
  void serialize(Archive & archive)
  {
    archive( x, y, z ); // serialize things by passing them to the archive
  }
};